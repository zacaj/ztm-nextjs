generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TournamentType {
  FRENZY
  MATCHPLAY
}

model Tournament {
  id   BigInt @id @default(autoincrement())
  name String

  running Boolean @default(false)

  type          TournamentType
  maxPlayers    Int
  gamesPerRound Int            @default(1)

  players Player[]
  games   Game[]
  matches Match[]
}

model Player {
  id           BigInt     @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId BigInt
  name         String

  ifpa    String?
  enabled Boolean @default(true)
  deleted Boolean @default(false)

  matches Match[]
}

model Game {
  id           BigInt     @id @default(autoincrement())
  tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId BigInt
  name         String

  categories String[] @default([])
  enabled    Boolean  @default(true)
  deleted    Boolean  @default(false)

  matches Match[]
}

model Match {
  id           BigInt     @id @default(autoincrement())
  Tournament   Tournament @relation(fields: [tournamentId], references: [id])
  tournamentId BigInt

  game    Game?    @relation(fields: [gameId], references: [id])
  gameId  BigInt?
  players Player[]

  started     DateTime  @default(now())
  completed   DateTime?
  finishOrder Int[]     @default([0, 0, 0, 0])

  roundNum Int?
  gameNum  Int?
}
